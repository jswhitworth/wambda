name: Deploy Fraud Detection Platform

on:
  push:
    branches:
      - main
      - release/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.6
        with:
          fetch-depth: 2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: "arn:aws:iam::748157940656:role/gh-actions"
          aws-region: us-west-2
      
      - name: Deploy Cirt Base Resources
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: wambda-base
          template: devops/cfn-base.yaml
          no-fail-on-empty-changeset: "1"

      # - name: Setup Python
      #   uses: actions/setup-python@v5.1.0
      #   with:
      #     python-version: "3.12.2"
  
      # - name: Install dependencies
      #   run: |
      #     python -m venv venv
      #     source venv/bin/activate
      #     pip install -r requirements.txt

      # - name: Build Lambda Layer
      #   run: |
      #     mkdir -p python/lib/python3.12/site-packages
      #     cp -r venv/lib/python3.12/site-packages/* python/lib/python3.12/site-packages/
      #     cp src/cirt-lib.py python/

      #     # Check for layer changes
      #     find python -type f -exec md5sum {} + | sort -k 2 | md5sum | awk '{ print $1 }' > layer_hash.txt
      #     if aws s3 ls s3://cirt-base/layers/layer_hash.txt; then
      #       aws s3 cp s3://cirt-base/layers/layer_hash.txt old_layer_hash.txt
      #     else
      #       echo "no-old-hash" > old_layer_hash.txt
      #     fi
      #     old_hash=$(cat old_layer_hash.txt)
      #     new_hash=$(cat layer_hash.txt)
      #     if [ "$old_hash" = "$new_hash" ]; then
      #       echo "Hashes match. No need to upload."
      #       echo "upload-required=false" >> $GITHUB_ENV
      #     else
      #       echo "Hashes do not match. Upload required."
      #       echo "upload-required=true" >> $GITHUB_ENV
      #     fi
      
      # - name: Zip and upload layer to s3
      #   if: env.upload-required == 'true'
      #   run: |
      #     zip -qr9 layer.zip python
      #     aws s3 cp layer.zip s3://cirt-base/layers/cirt-layer.zip
      #     aws s3 cp layer_hash.txt s3://cirt-base/layers/layer_hash.txt

      # - name: Zip Lambda function code
      #   run: |
      #     zip -r cirt-src.zip src
      #     aws s3 cp cirt-src.zip s3://cirt-base/cirt-src.zip
          
      - name: Deploy Cirt Platform Resources
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: cirt-fraud-platform
          template: infra/cirt-fraud-platform.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "CodeS3Bucket=cirt-base,CodeS3Key=cirt-src.zip"
        